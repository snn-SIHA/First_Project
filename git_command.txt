git 명령어 모음
# 생략된 부분 다소 많습니다.

#--------------------------------------------------
기본 설정 관련

git 관리 폴더 생성 - 폴더 최초 생성시 필수
git init

저장소 경로 설정 - 필수
git remote add origin "주소"
ex) git remote add origin "https://github.com/honggildong/repo"

이번 프로젝트의 github 주소
https://github.com/snn-SIHA/First_Project

#--------------------------------------------------
branch, switch = 브랜치 관련
# 브랜치는 말하자면 아나콘다의 '가상'과 동일한 포지션
# 비슷한 역할을 하는 명령어들이 있지만, 괜히 복잡해지니 생략

현재 폴더에 존재하는 브랜치 출력
git branch

새로운 브랜치 생성
git branch 브랜치명

작업 브랜치 변경
git switch 브랜치명
ex) git switch testbranch

작업 브랜치를 변경하면서 생성
git switch -c 브랜치명
ex) git switch -c new_branch

브랜치명 변경 1
git branch -m 새로운 이름
ex) git branch -m editer
# 위와 같이 작성 시, 현재 브랜치의 이름을 editer로 변경

브랜치명 변경 2
git branch -m 기존명 새명칭
ex) git branch -m main new_main
# main 브랜치의 이름을 new_main으로 변경

#--------------------------------------------------
pull = 불러오기 관련

main에서 파일 불러오기
git pull origin 저장소의 브랜치명
ex) git pull origin main
비고 : 새 폴더에서 실행하기 바랍니다.
기존에 사용하던 폴더에서 실행할 시, 기존 파일들이 어떻게 되는지 알 수 없습니다.

#--------------------------------------------------
add, commit = 업로드 준비
# 흔히 add로 파일을 추가하는 행위를 스테이징 한다고 합니다

수정/삭제된 파일만 추가
git add -u

파일 확장자 여부로 추가(ex: .csv or .txt)
git add *.*

그냥 전부 추가
git add .

직접 파일 지정해서 추가
git add '파일'
ex) git add test.py

현재 변경된 내용 출력
git status

커밋 (수정내용) 작성
git commit -m "내용"
ex) git commit -m "이렇게 쓰시면 됩니다"

커밋 작성 - 세부적으로
git commit
비고 : 해당 명령어 실행 시 커밋 작성을 위한 새로운 창이 뜹니다.
실행된 프로그렘에 따라 저장 방식에 다소 차이가 있으므로, gpt에 물어보면서 쓰십쇼.

#--------------------------------------------------
push = 업로드 관련

현재 브랜치에서 업로드
git push origin 브랜치명
ex) git push origin main
# 로컬 main 브랜치에서 원격 main 브랜치로 저장
# 로컬=작업자, 원격=저장소

브랜치 지정해서 업로드
git push origin 로컬:원격
ex) git push origin dev:main
# 로컬 dev 브랜치에서 원격 main 브랜치로 저장

#--------------------------------------------------
merge = 병합 관련

# 상당히 번거로운 관계로, 다루지 않겠습니다.

#--------------------------------------------------
그 외 명령어

현재 스테이지한 파일들 전부 취소
git reset

커밋 기록 출력
git log